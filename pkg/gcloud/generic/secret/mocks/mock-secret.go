// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go
//
// Generated by this command:
//
//	mockgen -source=interface.go -destination=mocks/mock-secret.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	regexp "regexp"

	secret "github.com/pal-paul/go-libraries/pkg/gcloud/generic/secret"
	gomock "go.uber.org/mock/gomock"
)

// MockSecretInterface is a mock of SecretInterface interface.
type MockSecretInterface[T any] struct {
	ctrl     *gomock.Controller
	recorder *MockSecretInterfaceMockRecorder[T]
	isgomock struct{}
}

// MockSecretInterfaceMockRecorder is the mock recorder for MockSecretInterface.
type MockSecretInterfaceMockRecorder[T any] struct {
	mock *MockSecretInterface[T]
}

// NewMockSecretInterface creates a new mock instance.
func NewMockSecretInterface[T any](ctrl *gomock.Controller) *MockSecretInterface[T] {
	mock := &MockSecretInterface[T]{ctrl: ctrl}
	mock.recorder = &MockSecretInterfaceMockRecorder[T]{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretInterface[T]) EXPECT() *MockSecretInterfaceMockRecorder[T] {
	return m.recorder
}

// AddSecretVersion mocks base method.
func (m *MockSecretInterface[T]) AddSecretVersion(secretName string, payload []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSecretVersion", secretName, payload)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSecretVersion indicates an expected call of AddSecretVersion.
func (mr *MockSecretInterfaceMockRecorder[T]) AddSecretVersion(secretName, payload any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSecretVersion", reflect.TypeOf((*MockSecretInterface[T])(nil).AddSecretVersion), secretName, payload)
}

// CreateSecret mocks base method.
func (m *MockSecretInterface[T]) CreateSecret(secretName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSecret", secretName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSecret indicates an expected call of CreateSecret.
func (mr *MockSecretInterfaceMockRecorder[T]) CreateSecret(secretName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSecret", reflect.TypeOf((*MockSecretInterface[T])(nil).CreateSecret), secretName)
}

// Get mocks base method.
func (m *MockSecretInterface[T]) Get(name string) (T, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(T)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSecretInterfaceMockRecorder[T]) Get(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSecretInterface[T])(nil).Get), name)
}

// GetBytes mocks base method.
func (m *MockSecretInterface[T]) GetBytes(name string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBytes", name)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBytes indicates an expected call of GetBytes.
func (mr *MockSecretInterfaceMockRecorder[T]) GetBytes(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBytes", reflect.TypeOf((*MockSecretInterface[T])(nil).GetBytes), name)
}

// GetSecrets mocks base method.
func (m *MockSecretInterface[T]) GetSecrets(secretsRegexp *regexp.Regexp) ([]secret.SecretData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecrets", secretsRegexp)
	ret0, _ := ret[0].([]secret.SecretData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecrets indicates an expected call of GetSecrets.
func (mr *MockSecretInterfaceMockRecorder[T]) GetSecrets(secretsRegexp any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecrets", reflect.TypeOf((*MockSecretInterface[T])(nil).GetSecrets), secretsRegexp)
}

// GetVersion mocks base method.
func (m *MockSecretInterface[T]) GetVersion(name, version string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVersion", name, version)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersion indicates an expected call of GetVersion.
func (mr *MockSecretInterfaceMockRecorder[T]) GetVersion(name, version any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVersion", reflect.TypeOf((*MockSecretInterface[T])(nil).GetVersion), name, version)
}
